# ðŸš— Dynamic Pricing for Urban Parking Lots â€“ Model 1

## Overview
This project simulates dynamic pricing for parking lots using real-time occupancy data. The goal is to balance demand and availability using a baseline linear pricing model.

---

## Model 1 â€“ Baseline Linear Formula

Price = Previous Price + Î± Ã— (Occupancy / Capacity)


- Î± = 5  
- Price is capped between â‚¹5 and â‚¹20  
- Simple and interpretable logic

---

## Tech Stack
- Python
- Pandas
- Google Colab

---

## Output Example

Time Step 1: â‚¹13.2
Time Step 2: â‚¹15.4
Time Step 3: â‚¹17.8



---

## Folder Structure
- `model1_baseline.ipynb` â†’ Notebook file  
- `dataset.csv` â†’ Dataset used  
- `README.md` â†’ Project summary

---



---

## Model 2 â€“ Demand-Aware Pricing

`Price = Previous Price + Î± Ã— (Occupancy / Capacity) + Î² Ã— QueueLength`

- Î± = 5, Î² = 0.5  
- Price is capped between â‚¹5 and â‚¹25  
- This model increases price more when queue is longer  
- Better reflects real-time demand pressure



---

## Model 3 â€“ Competition-Aware Pricing

`Price = Prev_Price + Î± Ã— (Occupancy / Capacity) + Î² Ã— QueueLength â€“ Î³ Ã— Avg_Nearby_Price`

- Î± = 5, Î² = 0.5, Î³ = 0.3  
- This model accounts for pricing competition from nearby lots  
- If nearby price is lower, this model suggests adjusting our price down  
- We used a dummy nearby price = â‚¹12 (as actual not provided)

 
